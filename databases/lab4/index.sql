-- Средний объем таблиц. Используем хэш, за счёт чего можем эффективно
-- использовать JOIN. При небольших данных хэш позволяет эффективно
-- выбирать строки.
CREATE INDEX people_id_index ON "Н_ВЕДОМОСТИ" USING HASH("ЧЛВК_ИД");
-- Также создадим btree индекс для сравнения отчества. С помощью сортировки
-- в дереве индекс позволяет быстро и эффективно производить выборку
CREATE INDEX people_name_index ON "Н_ЛЮДИ" USING HASH("ИМЯ");

-- При большом объеме таблиц можем использовать следующие индексы. Планировщик
-- будет использовать merge join для соединения таблиц, что значительно ускорит
-- процесс.
CREATE INDEX vedom_people_id_index ON "Н_ВЕДОМОСТИ" USING BTREE("ЧЛВК_ИД");
CREATE INDEX people_id_index ON "Н_ЛЮДИ" USING BTREE("ИД");


-- индекс позволяет ускорить соединение таблиц по хэшу
CREATE INDEX people_id_index ON "Н_ЛЮДИ" USING HASH("ИД");
-- индекс позволяет ускорить запрос по хэшу, оператор =
CREATE INDEX people_name_index ON "Н_ЛЮДИ" USING HASH("ИМЯ");
-- индекс позволяет ускорить запрос по дереву, используется сравнение
CREATE INDEX obuch_index ON "Н_ОБУЧЕНИЯ" USING BTREE("НЗК");